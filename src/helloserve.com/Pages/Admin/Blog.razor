@page "/admin/blogs/"
@page "/admin/blogs/{title}"
@layout LoginLayout
@using helloserve.com.Adaptors
@using helloserve.com.Models
@inject IBlogServiceAdaptor ServiceAdaptor

@if (Model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="blog-edit">
        <EditForm Model="@Model" OnValidSubmit="Submit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="edit-fields">
                <p>
                    <div>
                        <label for="title">Title</label>
                    </div>
                    <div>
                        <InputText Id="title" @bind-Value="@Model.Title"/>
                    </div>
                </p>
                <p>
                    <div>
                        <label for="isPublished">Is Published</label>
                    </div>
                    <div>
                        <InputCheckbox Id="isPublished" @bind-Value="@Model.IsPublished"/>
                    </div>
                </p>
                <p>
                    <div>
                        <label for="publishDate">Publish Date</label>
                    </div>
                    <div>
                        <InputDate T="System.DateTime?" Id="publishDate" @bind-Value="@Model.PublishDate"/>
                    </div>
                </p>
                <p>
                    <div>
                        <label for="content">Content</label>
                    </div>
                    <div>
                        <InputTextArea Id="content" @bind-Value="@Model.Content" Class="textarea-content"/>
                    </div>
                </p>
            </div>
            <div class="edit-actions">
                <div>
                    <button type="submit">Submit</button>
                </div>
                <div>
                    <button type="button" onclick="@Publish">Publish</button>
                </div>
            </div>
        </EditForm>
    </div>
}

@functions {
    [Parameter]
    private string Title { get; set; } = null;

    BlogCreate Model;

    protected override async Task OnInitAsync()
    {
        Model = await ServiceAdaptor.Edit(Title);
        if (Model == null)
        {
            Model = new BlogCreate();
        }
    }

    async Task Submit()
    {
        await ServiceAdaptor.Submit(Model);
        StateHasChanged();
    }

    async Task Publish()
    {
        await ServiceAdaptor.Publish(Title);
        Model = await ServiceAdaptor.Edit(Title);
        StateHasChanged();
    }
}