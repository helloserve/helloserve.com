@page "/admin/"
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime
@using helloserve.com.Auth
@using Microsoft.JSInterop


@if (userState == null) // Retrieving the login state
{
    <text>Loading...</text>
}
else
{
    <span>&nbsp;</span>
    <AuthorizeView>
        <NotAuthorized>
            <span>
                <button class="btn btn-danger" onclick="@SignIn">Sign in</button>
            </span>
        </NotAuthorized>
    </AuthorizeView>
}

@functions{
    [CascadingParameter] Task<AuthenticationState> authStateTask { get; set; }

    private List<TaskCompletionSource<bool>> pendingSignInFlows = new List<TaskCompletionSource<bool>>();
    UserState userState = new UserState();

    protected override async Task OnInitAsync()
    {
        var authState = await authStateTask;
        if (authState.User != null)
        {
            userState.DisplayName = authState.User.Identity.Name;
            userState.PictureUrl = authState.User.FindFirst("picture")?.Value;
            userState.IsLoggedIn = authState.User.Identity.IsAuthenticated;
        }
    }

    public async Task SignIn()
    {
        await JSRuntime.InvokeAsync<object>("openLoginPopup", DotNetObjectRef.Create(this));
    }
}