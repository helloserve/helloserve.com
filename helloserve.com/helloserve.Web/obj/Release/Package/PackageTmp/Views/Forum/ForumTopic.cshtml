@model ForumTopicModel           
<h2>@Model.Topic.Name</h2>
@if(Model.Topic.Locked)
{
    <div style="color:#ff5a00">This topic has been locked by the administrators</div>   
}
<div>@Html.ActionLink(Model.Forum.Name, "Forum", "Forum", new { forum = Model.Forum.Name }, null)
    > @Html.ActionLink(Model.Category.Name, "ForumCategory", "Forum", new { forum = Model.Forum.Name, category = Model.Category.Name }, null)
    > @Model.Topic.Name</div>
<br />
@Html.Hidden("TopicForumName", Model.Forum.Name)
@Html.Hidden("TopicCategoryName", Model.Category.Name)
@Html.Hidden("TopicTopicID", Model.Topic.ForumTopicID)
@Html.Hidden("TopicCurrentPage", Model.CurrentPage)
@Html.Hidden("TopicTotalPages", Model.Pages)

<div style="display:inline-block;">
@{ Html.RenderPartial("_TopicPager", Model); }
</div>
<div style="min-width:1024px">
    <div id="forumTopicPosts">
        @foreach (var post in Model.Posts)
        {       
            if(post == Model.ViewPost)
            {
                <div class="forumTopicPost forumPostAnchor" id="Post_@(post.Post.ForumPostID)">
                    @Html.Partial("_TopicPost", post)
                </div>
            }
            else
            {
                <div class="forumTopicPost" id="Post_@(post.Post.ForumPostID)">
                    @Html.Partial("_TopicPost", post)
                </div>
            }
            <br />
        }
    </div>
    <br />
    @if(!Model.Topic.Locked || Settings.Current.IsAdminUser)
    {
        <div class="controlDiv" id="forumPostAccess">
            @if (Settings.Current.User == null)
            {
                <span>We need to know who you are before you can post</span>
            }
            else
            {
                <span><a onclick="Forum.MaintainForumPost('@(Model.Forum.Name)', '@(Model.Category.Name)', @(Model.Topic.ForumTopicID))">Create new Post</a></span>
            }
        </div>
    }
    <div id="forumPost"></div>
</div>
@{ Html.RenderPartial("_TopicPager", Model); } 
